buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    ext {
        springBoot = "2.3.4.RELEASE"
        alibabaCloud = "2.2.3.RELEASE"
        springCloud = "2.2.5.RELEASE"
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBoot}")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"
    }
}

ext {
    devVersion = "dev-9-SNAPSHOT"
}
apply from: "../build-config/build-all.gradle"
apply from: "../build-config/build-base.gradle"
apply from: "../build-config/build-boot-jar.gradle"

dependencies {
    implementation "com.ruoyi:ruoyi-common-core:${devVersion}"
    implementation "com.ruoyi:ruoyi-common-redis:${devVersion}"

    implementation "com.github.penggle:kaptcha:2.3.2"
    implementation "io.springfox:springfox-swagger2:2.9.2"
    implementation "io.springfox:springfox-swagger-ui:2.9.2"


    implementation "com.alibaba.csp:sentinel-datasource-nacos:1.8.0"

//    implementation "org.springframework:spring-context-support:5.2.9.RELEASE"
//    implementation "org.springframework:spring-web:5.2.9.RELEASE"

    implementation "com.alibaba.cloud:spring-cloud-alibaba-sentinel-gateway:${alibabaCloud}"
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel:${alibabaCloud}"
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config:${alibabaCloud}"
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:${alibabaCloud}"

    implementation "org.springframework.boot:spring-boot-starter-validation:${springBoot}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${springBoot}"
    implementation "org.springframework.boot:spring-boot-starter-data-redis:${springBoot}"
//    implementation "org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR8"
    implementation "org.springframework.cloud:spring-cloud-starter-gateway:${springCloud}"
}

static def getGitVersion() {
    return System.getProperty("gitVersion") ?: "git rev-parse --short HEAD".execute().text.trim()
}
